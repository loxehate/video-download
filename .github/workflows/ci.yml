name: ci

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
  
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          # 如果空间还是不够用，可以把以下开启，清理出更多空间
          # remove-android: 'true'
          # remove-codeql: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart docker
        run: sudo service docker restart
    
      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Clone repository
        uses: actions/checkout@v4

      - name: Make youtube-dl executable
        run: chmod +x ./bin/yt-dlp

      - name: Install Git LFS
        run: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          git lfs install

      - name: Track large video files
        run: git lfs track "*.mp4"

      - name: Configure Git user
        run: |
          git config --local user.email "loxe@gmail.com"
          git config --local user.name "loxe"

      - name: Set Git remote URL
        run: |
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Check for unstaged changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "::set-output name=unstaged::false"
          else
            echo "::set-output name=unstaged::true"
          fi

      - name: Commit unstaged changes
        if: steps.check_changes.outputs.unstaged == 'true'
        run: |
          git add .
          git commit -m "Commit unstaged changes before rebase"

      - name: Pull latest changes
        run: git pull --rebase

      - name: Download video with retry
        run: |
          max_retries=3
          retry_count=0
          download_success=false
          while [ $retry_count -lt $max_retries ] && [ "$download_success" == "false" ]; do
            ./bin/yt-dlp -v --config-location config.txt
            if [ $? -eq 0 ]; then
              download_success=true
            else
              retry_count=$((retry_count+1))
              echo "Download attempt $retry_count failed. Retrying in 5 seconds..."
              sleep 5
            fi
          done
          if [ "$download_success" == "false" ]; then
            echo "Failed to download video after $max_retries attempts."
            exit 1
          fi


      - name: sync video
        run: |
          docker run -d --name=aliyunpan-sync -v "./aliyunpan_config.json:/home/app/config/aliyunpan_config.json" -v "./downloads:/home/app/data" -e ALIYUNPAN_PAN_DIR="github_downloads" -e ALIYUNPAN_SYNC_MODE="upload" -e ALIYUNPAN_SYNC_POLICY="increment" -e ALIYUNPAN_SYNC_CYCLE="onetime" -e ALIYUNPAN_SYNC_DRIVE="backup" -e ALIYUNPAN_SYNC_LOG="true" tickstep/aliyunpan-sync:v0.3.4

      - name: check video sync success
        run: |
          while docker ps | grep -q "aliyunpan-sync"; do
              echo "等待视频同步完成"
              sleep 30
          done
          echo "视频同步已完成,登陆云盘检查视频是否上传成功"

      - name: Error handling
        if: failure()
        run: |
          echo "An error occurred. Check the logs for details."